<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAAtwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACUAAADLAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAMoAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAygAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABYAAAAdgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUAAADKAAAAJgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAWQAAANQAAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAFsAAACZAAAAsAAAAOwAAACwAAAAoQAA
        AIcAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAFkAAADUAAAAVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAACGAAAAzQAAAH8AAACGAAAA4gAA
        AIcAAAByAAAAoQAAAMsAAAA8AAAAAAAAAAAAAABZAAAA1AAAAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAiAAAAMcAAAAwAAAAAAAA
        ACEAAADJAAAAIwAAAAAAAAADAAAAdwAAAM4AAAA9AAAAWAAAANQAAABXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAIgAAADHAAAALwAA
        AAAAAAAAAAAAJAAAAMwAAAAmAAAAAAAAAAAAAAADAAAAdgAAAN0AAADZAAAAVgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAACIAAAAxwAA
        AC8AAAAAAAAAAAAAAAAAAAAQAAAAaAAAABEAAAAAAAAAAAAAAAAAAABdAAAA6gAAAN0AAAA9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAiAAA
        AMcAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWgAAANMAAABbAAAAdgAA
        AM4AAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        AIUAAADHAAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkAAADUAAAAVwAA
        AAAAAAADAAAAeAAAAMsAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAqAAAA1AAAADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAALAAAAC4AAAAKAAAAgAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAADjAAAA1wAA
        AKUAAABzAAAAPAAAAAYAAAAAAAAADQAAALIAAACFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        ADMAAAAYAAAAPgAAACgAAAAAAAAAAAAAAAAAAAAAAAAAOwAAANEAAAAxAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABvAAAAzwAAAFcAAAAEAAAAAAAAAAAAAAACAAAAnQAAAI0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAABfAAAAzgAAAJkAAAAqAAAAAAAAAAAAAABLAAAAwwAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAmwAAAM4AAACQAAAAQwAA
        AFoAAADKAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAARgAA
        AKwAAADgAAAA6QAAAI4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//wf///8H8H//B+B//ADAf/AAAH/gAAB/wAAA/4AAAf8AAAP+AAAD/gA
        AAf4AAAH+AgAB/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBwAAEAcAAAAPAAAADwAAAB8AAAA/AAAAf4AA
        AP+AAAH/4AA//+AAP//4AD//+AA///4AP/8=
</value>
  </data>
</root>